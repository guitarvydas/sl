(defclass unparser ()
  ((x :accessor x)))

(DEFMETHOD UNPARSE-SCHEMATIC ((U UNPARSER))
   (LET NIL
     (UNPARSE-EMIT-TOKEN :SCHEM)
     (LET NIL
       (UNPARSE-PUSH U (LET ((NAME (SLOT-VALUE (UNPARSE-TOS U) (QUOTE NAME)))) NAME))
       (LET NIL
         (UNPARSE-CALL-RULE U (FUNCTION UNPARSE-STRING))
         (LET NIL
           (UNPARSE-POP)
           (LET NIL
             (UNPARSE-PUSH U (LET ((KIND (SLOT-VALUE (UNPARSE-TOS U) (QUOTE KIND)))) KIND))
             (LET NIL
               (UNPARSE-CALL-RULE U (FUNCTION UNPARSE-STRING))
               (LET NIL
                 (UNPARSE-POP)
                 (LET NIL
                   (UNPARSE-PUSH U (LET ((INPUTS (SLOT-VALUE (UNPARSE-TOS U) (QUOTE INPUTS)))) INPUTS))
                   (LET NIL
                     (UNPARSE-CALL-RULE U (FUNCTION UNPARSE-INPUTS))
                     (LET NIL (UNPARSE-POP)
                       (LET NIL
                         (UNPARSE-PUSH U (LET ((OUTPUTS (SLOT-VALUE (UNPARSE-TOS U) (QUOTE OUTPUTS)))) OUTPUTS))
                         (LET NIL
                           (UNPARSE-CALL-RULE U (FUNCTION UNPARSE-OUTPUTS))
                           (LET NIL (UNPARSE-POP)
                             (LET NIL
                               (UNPARSE-PUSH U (LET ((REACT (SLOT-VALUE (UNPARSE-TOS U) (QUOTE REACT)))) REACT))
                               (LET NIL
                                 (UNPARSE-CALL-RULE U (FUNCTION UNPARSE-STRING))
                                 (LET NIL
                                   (UNPARSE-POP)
                                   (LET NIL
                                     (UNPARSE-PUSH U (LET ((FIRST-TIME (SLOT-VALUE (UNPARSE-TOS U) (QUOTE FIRST-TIME)))) FIRST-TIME))
                                     (LET NIL
                                       (UNPARSE-CALL-RULE U (FUNCTION UNPARSE-STRING))
                                       (LET NIL
                                         (UNPARSE-POP)
                                         (LET NIL
                                           (UNPARSE-PUSH U (LET ((WIRES (SLOT-VALUE (UNPARSE-TOS U) (QUOTE WIRES)))) WIRES))
                                           (LET NIL
                                             (UNPARSE-PUSH U (LET ((PARTS (SLOT-VALUE (UNPARSE-TOS U) (QUOTE PARTS)))) PARTS))
                                             (LET NIL
                                               (UNPARSE-CALL-RULE U (FUNCTION UNPARSE-PARTS))
                                               (LET NIL
                                                 (UNPARSE-POP)
                                                 (LET NIL
                                                   (UNPARSE-POP))))))))))))))))))))))))))
#|
 (DEFMETHOD UNPARSE-INPUTS ((U UNPARSER)) (LET NIL (UNPARSE-EMIT-TOKEN :LPAR) (LET NIL (UNPARSE-CALL-RULE U (FUNCTION UNPARSE-STRING-LIST)) (LET NIL (UNPARSE-EMIT-TOKEN :RPAR))))) (DEFMETHOD UNPARSE-OUTPUTS ((U UNPARSER)) (LET NIL (UNPARSE-EMIT-TOKEN :LPAR) (LET NIL (UNPARSE-CALL-RULE U (FUNCTION UNPARSE-STRING-LIST)) (LET NIL (UNPARSE-EMIT-TOKEN :RPAR))))) (DEFMETHOD UNPARSE-STRING-LIST ((U UNPARSER)) (LET NIL (UNPARSE-FOREACH-IN-LIST (FUNCTION (LAMBDA NIL (LET NIL (UNPARSE-EMIT-TOKEN :STRING) (LET NIL (UNPARSE-CALL-EXTERNAL U (FUNCTION SEND-TOP))))))))) (DEFMETHOD UNPARSE-PARTS ((U UNPARSER)) (LET NIL (UNPARSE-FOREACH-IN-TABLE (FUNCTION (LAMBDA NIL (LET NIL (UNPARSE-CALL-RULE U (FUNCTION UNPARSE-PART)))))))) (DEFMETHOD UNPARSE-PART ((U UNPARSER)) (LET ((NAME (SLOT-VALUE (UNPARSE-TOS U) (QUOTE NAME)))) NAME (LET NIL (UNPARSE-CALL-RULE U (FUNCTION UNPARSE-STRING)) (LET NIL (UNPARSE-POP) (LET ((KIND (SLOT-VALUE (UNPARSE-TOS U) (QUOTE KIND)))) KIND (LET NIL (UNPARSE-CALL-RULE U (FUNCTION UNPARSE-KIND)) (LET NIL (UNPARSE-POP) (LET ((INPUTS (SLOT-VALUE (UNPARSE-TOS U) (QUOTE INPUTS)))) INPUTS (LET NIL (UNPARSE-CALL-RULE U (FUNCTION UNPARSE-INPUTS)) (LET NIL (UNPARSE-POP) (LET ((OUTPUTS (SLOT-VALUE (UNPARSE-TOS U) (QUOTE OUTPUTS)))) OUTPUTS (LET NIL (UNPARSE-CALL-RULE U (FUNCTION UNPARSE-OUTPUTS)) (LET NIL (UNPARSE-POP) (LET ((REACT (SLOT-VALUE (UNPARSE-TOS U) (QUOTE REACT)))) REACT (LET NIL (UNPARSE-CALL-RULE U (FUNCTION UNPARSE-STRING)) (LET NIL (UNPARSE-POP) (LET ((FIRST-TIME (SLOT-VALUE (UNPARSE-TOS U) (QUOTE FIRST-TIME)))) FIRST-TIME (LET NIL (UNPARSE-CALL-RULE U (FUNCTION UNPARSE-STRING)) (LET NIL (UNPARSE-POP)))))))))))))))))))) (DEFMETHOD UNPARSE-PARTS ((U UNPARSER)) (LET NIL (UNPARSE-FOREACH-IN-LIST (FUNCTION (LAMBDA NIL (LET ((INPUTS (SLOT-VALUE (UNPARSE-TOS U) (QUOTE INPUTS)))) INPUTS (LET NIL (UNPARSE-FOREACH-IN-TABLE (FUNCTION (LAMBDA NIL (LET NIL (UNPARSE-CALL-EXTERNAL U (FUNCTION FIND-SINK-PART-PIN-IN-WIRES)) (LET NIL (UNPARSE-EMIT-TOKEN :INDEXED-SINK) (LET NIL (UNPARSE-CALL-EXTERNAL U (FUNCTION EMIT-IF-INDEXED-SINK)))))))) (LET NIL (UNPARSE-POP)))))))))
|#